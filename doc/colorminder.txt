*colorminder.txt*  Plugin for automatically remembering colorscheme changes

Author:  Roger Spencer <https://github.com/rojspencer/vim-colorminder>
License: Same terms as Vim itself (see |license|)

INTRODUCTION                                                  *colorminder*

This plugin has vim remember color scheme changes automatically so that
it gets loaded on subsequent starts of vim.

It (mostly) eliminates the need to make changes to your .vimrc file every time
you change color schemes -- which can be convenient when your .vimrc is source controled.

==============================================================================
FEATURES                                             *colorminder-features*

* Remembers gui and terminal vim color schemes seperately.

That's about it so far.

==============================================================================
CONFIGURATION                                   *colorminder-configuration*

Following are some options that can be set.

*g:colorminder_scheme_default_gui*
   Default color scheme to use in gui vim if one has not been set before.
   Useful when first using the plugin or moving to a new computer.
   Example: >
      let g:colorminder_scheme_default_gui = "hybrid"

*g:colorminder_scheme_default_term*
   Default color scheme to use in terminal vim if one has not been set before.
   Useful when first using the plugin or moving to a new computer.
   Example: >
      let g:colorminder_scheme_default_term = "jellybeans"

*g:colorminder_last_colorscheme_file*
   Path to the file to store color schemes used on startup. If the default for
   this file is under source control you should specify another location for
   the file.
   Default: ~/.vim/.colorminder_last_colorscheme (or the windows equivilant)

*g:colorminder_additional_lines*
  Additional script lines to add after color scheme loads.
  This is useful for color schemes that have multiple variations based on
  other settings that exist.
  For example, the pencil and base16 color scheme has both light and dark
  versions and is based on the current setting of *background*

  Value should be an array of lines to inject after the call to *colorscheme*

  Example:

  let g:colorminder_additional_lines = [
    \'  if (match(g:colors_name, "^base16-") > -1) || (g:colors_name == "pencil")',
    \'    set background=dark',
    \'  end']

==============================================================================
ISSUES                                          *colorminder-issues*

This plugin relies on the chosen color scheme setting 'g:colors_name'.
If the color scheme fails to set this then things will not work.  There is an
attempt to shoot out a warning if a chosen color scheme is not setting
'g:colors_scheme'.

Some color themes have multiple variations but don't update g:colors_name to
reflect those. For example, the sol theme has 'sol' and 'sol-term'. If you set
:colorscheme sol-term g:colors_name is only updated to be 'sol' and that's
what gets remembered. Not sure if there is anything I can do about that.

This was my first vim plugin. Was fun learning how to do this but things may
not be perfect.


 vim:tw=78:ts=8:ft=help:norl:
